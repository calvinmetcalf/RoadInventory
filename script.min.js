[].indexOf||(Array.prototype.indexOf=function(e,t,a){a=this.length;t=(a+~~t)%a;while(t<a&&(!(t in this)||this[t]!==e)){t++}if(t^a){return t}else{return-1}});function toGeoJSON(e,t){var a={type:"FeatureCollection",features:[]};var s=e.features.length;var r=0;while(s>r){var n=e.features[r];var i={type:"Feature",properties:n.attributes};if(n.geometry.x){i.geometry=o(n.geometry)}else if(n.geometry.points){i.geometry=l(n.geometry)}else if(n.geometry.paths){i.geometry=h(n.geometry)}else if(n.geometry.rings){i.geometry=p(n.geometry)}a.features.push(i);r++}function o(e){return{type:"Point",coordinates:[e.x,e.y]}}function l(e){if(e.points.length===1){return{type:"Point",coordinates:e.points[0]}}else{return{type:"MultiPoint",coordinates:e.points}}}function h(e){if(e.paths.length===1){return{type:"LineString",coordinates:e.paths[0]}}else{return{type:"MultiLineString",coordinates:e.paths}}}function p(e){if(e.rings.length===1){return{type:"Polygon",coordinates:e.rings}}else{var t=u(e.rings);var a=t[0];var s=t[1];var r=[];if(s.length===0){var n=a.length;var i=0;while(n>i){r.push([a[i]])}return{type:"MultiPolygon",coordinates:r}}else if(a.length===1){s.unshift(a[0]);return{type:"Polygon",coordinates:s}}else{return{type:"MultiPolygon",coordinates:a,holes:s}}}}function u(e){var t=[];var a=[];var s=e.length;var r=0;while(s>r){if(c(e[r])){t.push(e[r])}else{a.push(e[r])}r++}return[t,a]}function c(e){var t=e.length-1;var a=0;var s=0;while(t>a){s+=e[a][0]*e[a+1][1]-e[a+1][0]*e[a][1];a++}return s<=0}if(t){t(a)}else{return a}}var module=module||false;if(!!module&&typeof module!==undefined)module.exports=toGeoJSON;var overTest;(function(e){var t=function(){var t=e.documentMode;return"onhashchange"in e&&(t===undefined||t>7)}();L.Hash=function(e,t){this.onHashChange=L.Util.bind(this.onHashChange,this);if(e&&t){this.init(e,t)}else if(e){this.init(e)}};L.Hash.prototype={map:null,lastHash:null,lc:null,parseHash:function(e){if(e.indexOf("#")==0){e=e.substr(1)}var t=e.split("/");if(t.length>=3){var a=parseInt(t[0],10),s=parseFloat(t[1]),r=parseFloat(t[2]);if(isNaN(a)||isNaN(s)||isNaN(r)){return false}else if(t.length==3){return{center:new L.LatLng(s,r),zoom:a}}else{if(t.length==4){this.parseLayer(t[3])}else{this.parseLayer(t[3],t[4])}return{center:new L.LatLng(s,r),zoom:a}}}else{return false}},formatHash:function(e){var t=e.getCenter(),a=e.getZoom(),s=Math.max(0,Math.ceil(Math.log(a)/Math.LN2));var r=[a,t.lat.toFixed(s),t.lng.toFixed(s)];if(this.lc){var n=this.onLayerChange(this.lc,this.map);r.push(n.base);r.push(n.overlay.join("-"))}return"#"+r.join("/")},init:function(e,t){this.map=e;if(t){this.lc=t;this.map.on("layeradd layerremove",this.onMapMove,this)}this.map.on("moveend",this.onMapMove,this);this.lastHash=null;this.onHashChange();this.update();if(!this.isListening){this.startListening()}},remove:function(){this.map=null;if(this.isListening){this.stopListening()}},onMapMove:function(e){if(this.movingMap||this.map.getZoom()===0){return false}var t=this.formatHash(this.map);if(this.lastHash!=t){location.replace(t);this.lastHash=t}},movingMap:false,update:function(){var e=location.hash;if(e===this.lastHash){console.info(e+"!"+this.lastHash);return}var t=this.parseHash(e);if(t){console.log("parsed:",t.zoom,t.center.toString());this.movingMap=true;this.map.setView(t.center,t.zoom);this.movingMap=false}else{console.warn("parse error; resetting:",this.map.getCenter(),this.map.getZoom());this.onMapMove(this.map)}},changeDefer:100,changeTimeout:null,onHashChange:function(){if(!this.changeTimeout){var e=this;this.changeTimeout=setTimeout(function(){e.update();e.changeTimeout=null},this.changeDefer)}},isListening:false,hashChangeInterval:null,startListening:function(){if(t){L.DomEvent.addListener(e,"hashchange",this.onHashChange)}else{clearInterval(this.hashChangeInterval);this.hashChangeInterval=setInterval(this.onHashChange,50)}this.isListening=true},stopListening:function(){if(t){L.DomEvent.removeListener(e,"hashchange",this.onHashChange)}else{clearInterval(this.hashChangeInterval)}this.isListening=false},onLayerChange:function(e,t){var a,s,r,n;s=e._layers;n=[];a=[];for(r in s){if(s[r].layer._leaflet_id&&s[r].layer._leaflet_id in t._layers){if(s[r].overlay){n.push(encodeURIComponent(s[r].name))}else{a.push(encodeURIComponent(s[r].name))}}}return{overlay:n,base:a[0]}},parseLayer:function(e,t){var a=decodeURIComponent(e);if(t){this.parseOver(t)}var s=lc._baseLayersList.childNodes.length;for(var r=0;r<s;r++){n(lc._baseLayersList.childNodes[r])}function n(e){var t=e.childNodes;var s=t[1].data.slice(1);if(a===s){t[0].setAttribute("checked","checked")}}lc._onInputClick()},parseOver:function(e){if(e.indexOf("-")>=0){var t=e.split("-")}else{var t=[e]}overTest=t;var a=this.lc;t.forEach(function(e){var t=decodeURIComponent(e);var s=a._overlaysList.childNodes.length;for(var r=0;r<s;r++){n(a._overlaysList.childNodes[r])}function n(e){var a=e.childNodes;var s=a[1].data.slice(1);if(t===s){a[0].checked=true}else{a[0].checked=false}}});a._onInputClick()}};L.hash=function(e,t){if(t){return new L.Hash(e,t)}else{return new L.Hash(e)}};L.Map.prototype.addHash=function(e){if(e){L.hash(this,e)}else{L.hash(this)}}})(window);L.GeoJSON.AJAX=L.GeoJSON.extend({defaultAJAXparams:{dataType:"json",callbackParam:"callback"},initialize:function(e,t){this._url=e;var a=L.Util.extend({},this.defaultAJAXparams);for(var s in t){if(this.defaultAJAXparams.hasOwnProperty(s)){a[s]=t[s]}}this.ajaxParams=a;this._layers={};L.Util.setOptions(this,t);if(this._url){this.addUrl(this._url)}},addUrl:function(e){var t=this;t._url=e;if(this.ajaxParams.dataType.toLowerCase()==="json"){L.Util.ajax(e,function(e){t.addData(e)})}else if(this.ajaxParams.dataType.toLowerCase()==="jsonp"){L.Util.jsonp(e,function(e){t.addData(e)},t.ajaxParams.callbackParam)}},refresh:function(e){e=e||this._url;this.clearLayers();this.addUrl(e)}});L.Util.ajax=function(e,t){var a,s=new XMLHttpRequest;s.open("GET",e);s.onreadystatechange=function(){if(s.readyState===4&&s.status===200){a=JSON.parse(s.responseText);t(a)}};s.send()};L.Util.jsonp=function(e,t,a,s){var r,n,i;var a=a||"callback";if(s){r=s}else{i="_"+Math.floor(Math.random()*1e6);r="L.Util.jsonp.cb."+i}L.Util.jsonp.cb[i]=t;var o=L.DomUtil.create("script","",document.getElementsByTagName("body")[0]);o.type="text/javascript";if(e.indexOf("?")===-1){n=e+"?"+a+"="+r}else{n=e+"&"+a+"="+r}o.src=n};L.Util.jsonp.cb={};L.geoJson.ajax=function(e,t){return new L.GeoJSON.AJAX(e,t)};var m=L.map("map").setView([42.2,-71],8),r=L.tileLayer("//services.massdot.state.ma.us/ArcGIS/rest/services/RoadInventory/Roads/MapServer/tile/{z}/{y}/{x}",{attribution:'Road Tiles from <a href="http://www.massdot.state.ma.us/planning/Main.aspx" target="_blank">MassDOT Planning</a>'}).addTo(m),t=L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"});var mapQuestAttr='Tiles Courtesy of <a href="http://www.mapquest.com/">MapQuest</a> &mdash; ';var osmDataAttr='Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';var mopt={url:"http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.jpeg",options:{attribution:mapQuestAttr+osmDataAttr,subdomains:"1234"}};var osm=L.tileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:osmDataAttr});var stamen={atribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, under <a href="http://creativecommons.org/licenses/by-sa/3.0">CC BY SA</a>.'};stamen.background=L.tileLayer("http://{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.jpg",{attribution:stamen.atribution}).addTo(m);stamen.waterColor=L.tileLayer("http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg",{attribution:stamen.atribution});var osmDE=L.tileLayer("http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png",{attribution:'&copy <a href=" http://www.openstreetmap.org/" title="OpenStreetMap">OpenStreetMap</a>  and contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/" title="CC-BY-SA">CC-BY-SA</a>',maxZoom:18,subdomains:"abc"});var cloudmade={url:"http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/1/256/{z}/{x}/{y}.png"};cloudmade.orig=L.tileLayer(cloudmade.url);var mq=L.tileLayer(mopt.url,mopt.options);var baseMaps={"Map Quest":mq,"Open Street Map":osm,"Open Street Map DE":osmDE,ESRI:t,Terrain:stamen.background,"Water Color":stamen.waterColor,"Cloud Made":cloudmade.orig};var overlayMaps={Roads:r};var lc=L.control.layers(baseMaps,overlayMaps);lc.addTo(m);var h=L.hash(m,lc);var popUp,clickable=L.geoJson("",{style:{opacity:0}}).addTo(m);m.on("click",getInfo);function getInfo(e){function t(e){return(e-4)*2}var a=m.getZoom();var s=e.latlng;var r=s.lat;var n=s.lng;var i="http://services.massdot.state.ma.us/ArcGIS/rest/services/RoadInventory/Roads/MapServer/{layer}/query?geometry={lng}%2C{lat}&geometryType=esriGeometryPoint&inSR=4326&spatialRel=esriSpatialRelIndexIntersects&returnGeometry=false&outSR=4326&outFields=Jurisdiction,StreetName,FunctionalClassification&f=json";var o={layer:t(a),lng:n,lat:r};var l=L.Util.template(i,o);L.Util.jsonp(l,function(e){var t=[];for(var a in e.features){var r=e.features[a].attributes.StreetName;if(t.indexOf(r)===-1){t.push(r)}}var n=L.Util.template("<div><ol><li>{el}</li></ol></div>",{el:t.join("</li><li>")});popUp=L.popup().setLatLng(s).setContent(n).openOn(m)})}